class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int n = matrix.size();
        int m = matrix[0].size();
        int left = matrix[0][0];
        int right = matrix[n-1][m-1];
        std::function<int(int)> find_rank = [&](int mid){
            int cnt = 0;
            for(int j=0;j<m;j++){
                for(int i=0;i<n;i++){
                    if(matrix[i][j]<=mid)
                        cnt++;
                    else
                        break;
                }
            }
            return cnt;
        };
        while(left<=right){
            int mid = left + (right - left)/2;
            int rank1 = find_rank(mid);
            int rank2 = find_rank(mid-1);
            if(rank2<k && k<=rank1)
                return mid;
            if(rank2+1>k)
                right = mid-1;
            else if(rank1<k)
                left = mid+1;
        }
        return 0;
    }
};